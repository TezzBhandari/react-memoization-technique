import Head from "next/head";
import { Inter } from "@next/font/google";
import { useState, memo } from "react";

const inter = Inter({ subsets: ["latin"] });

export type SwatchProps = {
  color: string;
};

const Swatch: React.FC<SwatchProps> = ({ color }) => {
  console.log(`Swatch Rendered with ${color}`);
  return (
    <div className={`w-16 h-16 m-4`} style={{ backgroundColor: color }}></div>
  );
};

/**
 * memo is a higher order function
 * It creates component i.e, memoized component
 * The memoized component only re-renders if it's props changes
 */
const MemoedSwatch = memo(Swatch);

export default function Home() {
  const [appRenderIndex, setAppRenderIndex] = useState(0);
  const [color, setColor] = useState("red");
  console.log(`App Rendered ${appRenderIndex}`);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div>
          <button
            className="border-2 px-3 py-2 rounded-md bg-emerald-200"
            onClick={() => setAppRenderIndex((prev) => prev + 1)}
          >
            Re-Render App
          </button>

          <button
            className="border-2 px-3 py-2 rounded-md bg-red-200"
            onClick={() => setColor(color === "red" ? "blue" : "red")}
          >
            Change Swatch Color
          </button>
        </div>
        <div>
          <MemoedSwatch color={color} />
          <MemoedSwatch color={color == "red" ? "blue" : "red"} />
        </div>
      </div>
    </>
  );
}
